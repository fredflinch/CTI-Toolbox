import requests as req 
import os, json, argparse, csv

def get_communicatingFiles(ip):
    communicating_hashes = {'ip': ip, 'hashes': []}
    vt_ip_report = "https://www.virustotal.com/api/v3/ip_addresses/{0}/relationships/communicating_files" 
    report = req.get(vt_ip_report.format(ip), headers=AUTH)
    
    if (report.status_code != 200):
        print("[!] ERROR [!]\nResponse returned code {}".format(report.status_code))
        return 0
    
    report = json.loads(report.content.decode("utf-8"))
    file_volume = int(report['meta']['count'])
    if (file_volume == 0): 
        return communicating_hashes
    
    for file in report['data']:
        (communicating_hashes['hashes']).append(file['id'])

    return communicating_hashes    

def save(outfile, data):
    with open(outfile, 'w', newline='') as f:
        writer = csv.writer(f)
        writer.writerow(['ip', 'hashes', 'volume'])
        for x in data:
            writer.writerow([x['ip'], '\n'.join(x['hashes']), len(x['hashes'])]) 
    

if __name__=="__main__":
    p = argparse.ArgumentParser()
    p.add_argument("-i", "--infile", help="Input CSV with IPs to check")
    p.add_argument("-o", "--outfile", help="Filename to save the output to")
    p.add_argument("--apikey", help="(Optional) Specify VT API key - will default to env VTKEY if unspecified")
    args = p.parse_args()

    if (args.apikey is not None):
        APIKEY = args.apikey
    else:
        APIKEY = os.getenv('VTKEY')
    
    AUTH = {'x-apikey':APIKEY}
    
    ips = []    
    if (args.infile is not None and args.outfile is not None):
        with open(args.infile) as f:
            reader = csv.reader(f, delimiter=',')
            for row in reader:
                ips.append(row[0])
        results = []        
        for ip in ips[1:]:
            results.append(get_communicatingFiles(ip))
        save(args.outfile, results)

